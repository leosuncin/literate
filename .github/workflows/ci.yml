name: CI

on: [push]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: reviewdog/action-eslint@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        eslint_flags: --ext '.js' --ext '.ts' --ext '.tsx' .
    - uses: luke142367/Docker-Lint-Action@v1.0.0
      with:
        target: .gitpod.Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - uses: wemake-services/dotenv-linter@master
      with:
        options: .env.example

  tsc:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: bahmutov/npm-install@v1
    - uses: icrawl/action-tsc@v1

  unit:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    needs: [lint, tsc]
    steps:
    - uses: actions/checkout@v2
    - uses: bahmutov/npm-install@v1
    - uses: actions/cache@v2
      name: Cache Next.js build
      with:
        path: .next/cache
        key: ${{ runner.os }}-next-build
        restore-keys: ${{ runner.os }}-next-build-
    - name: npm test
      run: |
        npm test -- --coverage
      env:
        CI: 'true'
        APP_SECRET: 4C3E89619525956BA3573B8426F6C
    - uses: actions/upload-artifact@v2
      with:
        name: unit-coverage
        path: coverage/unit

  e2e:
    runs-on: ubuntu-16.04
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    needs: [lint, tsc]
    services:
      mongodb:
        image: healthcheck/mongo
        ports:
        - "27017:27017"
    steps:
    - uses: actions/checkout@v2
    - name: Cache Next.js build
      uses: actions/cache@v2
      with:
        path: .next
        key: ${{ runner.os }}-next-build-${{ hashFiles('**/next.config.js') }}
        restore-keys: ${{ runner.os }}-next-build-
    - uses: bahmutov/npm-install@v1
    - name: Prepare DB, build and start Next.js
      run: |
        npm run fixtures:load
        npm run build
        npm start &
      env:
        MONGODB_URL: mongodb://localhost:${{ job.services.mongodb.ports[27017] }}/admin
        APP_SECRET: 4C3E89619525956BA3573B8426F6C
        NODE_ENV: production
        CODE_COVERAGE: true
    - name: Run Cypress
      uses: cypress-io/github-action@v2
      with:
        install: false
        wait-on: 'http://localhost:3000'
      env:
        APP_SECRET: 4C3E89619525956BA3573B8426F6C
        MONGODB_URL: mongodb://localhost:${{ job.services.mongodb.ports[27017] }}/admin
    - uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: Cypress screenshots
        path: cypress/screenshots
    - uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: Cypress video
        path: cypress/videos
    - run: npx nyc report
    - name: Run Newman
      run: |
        npx newman run https://api.getpostman.com/collections/367460-806c64d2-beba-4bfe-a2d6-7a346abab79d?apikey=$POSTMAN_API_KEY
      env:
        POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
    - uses: actions/upload-artifact@v2
      with:
        name: e2e-coverage
        path: coverage/e2e
